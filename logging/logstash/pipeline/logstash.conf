input {
	gelf {
		port => 12201
		type => docker
	}
}

## Add your filters / logstash plugins configuration here

filter {
	if [type] == "docker" {
		## Format apache2 logs
		mutate {
			remove_field => "command"
			remove_field => "container_id"
			remove_field => "image_id"
			remove_field => "command"
		}

		grok {
			match => {
				"message" => [
					"%{IPORHOST:[apache2][access][remote_ip]} - %{DATA:[apache2][access][user_name]} \[%{HTTPDATE:[apache2][access][time]}\] \"%{WORD:[apache2][access][method]} %{DATA:[apache2][access][url]} HTTP/%{NUMBER:[apache2][access][http_version]}\" %{NUMBER:[apache2][access][response_code]} %{NUMBER:[apache2][access][body_sent][bytes]}( \"%{DATA:[apache2][access][referrer]}\")?( \"%{DATA:[apache2][access][agent]}\")?",
					"%{IPORHOST:[apache2][access][remote_ip]} - %{DATA:[apache2][access][user_name]} \\[%{HTTPDATE:[apache2][access][time]}\\] \"-\" %{NUMBER:[apache2][access][response_code]} -"
				]
			}
			remove_field => "message"
			remove_field => "source_host"
			remove_field => "type"

			add_field => {
				log_type => "apache2-access"
			}
			tag_on_failure => []
		}

		grok {
			match => {
				"message" => [
					"%{SYSLOG5424SD} \[php%{NUMBER:php_version}:%{LOGLEVEL:loglevel}\] \[pid %{NUMBER:pid}\] \[client %{IP:client_ip}:%{NUMBER:client_port}\] %{GREEDYDATA:error}"
				]
			}
			remove_field => "type"
			remove_field => "source_host"
			remove_field => "message"
			remove_field => "pid"
			remove_field => "notice"

			add_field => {
				log_type => "apache2-error"
			}
			tag_on_failure => []
		}

		mutate {
			gsub => ["error", "\\n", "
"]
		}
		
		date {
			match => [ "[apache2][access][time]", "dd/MMM/YYYY:H:m:s Z" ]
			remove_field => "[apache2][access][time]"
		}

		useragent {
			source => "[apache2][access][agent]"
			target => "[apache2][access][user_agent]"
			remove_field => "[apache2][access][agent]"
		}

		geoip {			
			source => "[apache2][access][remote_ip]"
			target => "[apache2][access][geoip]"
			tag_on_failure => []
		}

		translate {
			field => "level"
			destination => "log_level"
			dictionary => [
				"0", "emergency",
				"1", "alert",
				"2", "critical",
				"3", "error",
				"4", "warning",
				"5", "notice",
				"6", "info",
				"7", "debug"
			]
		}
	}
}


output {
	stdout {}

	elasticsearch {
		hosts => "elasticsearch:9200"
	}
}